//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections.Generic;

public class KeyButton
{
	public delegate void Action();
	
	private bool pressed;
	private bool touched  = false;
	private bool buttonPressed;
	private bool keyPressed;
	
	public Rect rectangle;
	private string name;
	public event Action action;
	public event Action releaseAction;
	private KeyCode keyCode;

	private Vector2 v1 = Vector2.zero;

	public KeyButton(Rect rectangle , string name, KeyCode keyCode)
	{
		this.rectangle = rectangle;
		this.name = name;
		this.keyCode = keyCode;
	}
	
	private void PerformUpdate(){
		if (Input.GetKeyDown(keyCode)){
			keyPressed = true;
		}else if (Input.GetKeyUp( keyCode) ){
			keyPressed = false;
			releaseAction();
		}
		
		if ( keyPressed ) {
			action();
		}

		List<iPhoneTouch> goodIphoneTouches = TouchControl.getGoodIphoneTouches();

		if ( Input.GetKey ( KeyCode.T ) ){
			iPhoneTouch touch = new iPhoneTouch();
			touch.position = Input.mousePosition;
			goodIphoneTouches.Add( touch );
		}

		if (goodIphoneTouches.Count == 1){
			iPhoneTouch touch = goodIphoneTouches[0];
			v1 = new Vector2 ( touch.position.x, Screen.height - touch.position.y );
			//Camera cam = GameObject.Find("Screen Camera").camera;
			//Debug.Log("v1 = " + v1 + ",cam.pixelWidth  = " + cam.pixelWidth + ",cam.pixelHeight  = " + cam.pixelHeight );
			GUI.Label(new Rect(v1.x-5, v1.y-5,20 ,20), "O");
			if ( !touched && rectangle.Contains(v1) ){
				Debug.Log("TouchDown");
				touched = true;
			}
		}
		if ( touched && ( goodIphoneTouches.Count == 0  || !rectangle.Contains(v1) ) ){
			Debug.Log("TouchUp");
			touched = false;
			releaseAction();
		}

		if (touched){
			pressed = false;
			return;
		}

		Vector2 v = new Vector2 ( Input.mousePosition.x, Screen.height - Input.mousePosition.y );
		if ( !pressed && Input.GetMouseButtonDown(0) && rectangle.Contains(v) ){
			Debug.Log("ButtonDown");
			pressed = true;
		}else if (pressed &&  ( Input.GetMouseButtonUp(0) || !rectangle.Contains(v) ) ){
			Debug.Log("ButtonUp");
			pressed = false;
			releaseAction();
		}
	}

	public void PerformOnGui(){
		PerformUpdate();
		PerformOnGui(false);
	}

	private bool PerformOnGui(bool singleClick)
	{
		PerformUpdate();
		GUI.Button( rectangle , name );
		if (pressed || touched){
			GUI.Box(rectangle, "");
			if (singleClick && actionFirst){
				return false;
			}
			action();
			return true;
		}
		return false;
	}

	private static Dictionary<int,  KeyButton> staticButtons = new Dictionary<int,KeyButton>(); 
	private bool actionFirst = false;

	public static bool Button(Rect rect, string name, int id ){
		KeyButton button = null;
		if (staticButtons.ContainsKey(id) ){
			button = staticButtons[id];
		}else{
			button = new KeyButton(rect, name, KeyCode.None );
			button.action = delegate { button.actionFirst = true; };
			button.releaseAction = delegate {button.actionFirst = false; };
			staticButtons.Add(id, button);
		}
		return button.PerformOnGui(true);
	}
}


